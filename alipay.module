<?php

/*
 * This file is licensed under GPLv2+.
*/

/**
 * @file
 * Provides alipay interface for drupal.
 */

/**
 * Implementation of hook_help().
 */
function alipay_help($path, $arg) {
	switch ($path) {
		case 'charge/alipay':
			$output = '<b>'.t('FAQ on Alipay').'</b><br/><ul>';
			$output.= '<li>'.t('Any questions, you may call 95188. Or, click <a href="@url" target="_blank">here</a>.',array('@url'=>'http://help.alipay.com/lab/index.htm')).'</li>';
			$output.='</ul>';
			break;
		default: return;
	}
	return $output;
}

/**
 * Implementation of hook_menu().
 */
function alipay_menu() {
	$items['admin/config/services/alipay'] = array(
		'title' => 'alipay settings',
		'description' => 'alipay merchant settings.',
		'access arguments' => array('access administration pages'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('alipay_admin_form'),
	);
	$items['charge/alipay'] = array(
		'access callback' => 'alipay_access',
		'type' => MENU_CALLBACK,
		'page callback' => 'alipay_submit_form',
	);
	$items['charge/alipay/response'] = array(
		'access callback' => 'alipay_response_access',
		'type' => MENU_CALLBACK,
		'page callback' => 'alipay_response',
	);
	$items['charge/alipay/response_back'] = array(
		'access callback' => 'alipay_response_access',
		'type' => MENU_CALLBACK,
		'page callback' => 'alipay_response',
	);
	$items['charge/log/alipay'] = array(
		'type' => MENU_LOCAL_TASK,
		'title' => 'Alipay Transaction Dispatch',
		'description' => 'Process Alipay transaction Dispatch via data file',
		'weight' => 2,
		'access callback' => 'user_access',
		'access arguments' => array('administer charging'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('alipay_charge_dispatch_form'),
	);
	return $items;
}

/**
 * Implementation of hook_uninstall().
 */
function alipay_uninstall() {
	$settings=array(
		'security_key', 'merid'
	);
	foreach($settings as $s) {
		variable_del('alipay_'.$s);
	}
}

function alipay_admin_form($form, $form_state) {
	$form=array(
		'#submit' => array('alipay_admin_form_submit'),
		'#validate' => array('alipay_admin_form_validate'),
	);
	$form['merid'] = array(
		'#type' => 'textfield',
		'#title' => t('Partner ID'),
		'#default_value' => variable_get('alipay_merid'),
		'#maxlength' => 16,
		'#size' => 40,
		'#required' => TRUE,
	);
	$form['security_key'] = array(
		'#type' => 'textfield',
		'#title' => t('Security Key'),
		'#default_value' => variable_get('alipay_security_key'),
		'#required' => TRUE,
		'#maxlength' => 32,
		'#size' => 40,
	);

	return system_settings_form($form);
}

function alipay_admin_form_validate($form, $form_state) {
	if(preg_match('@^2088[0-9]{12}$@', $form_state['values']['merid']) !== 1) {
		form_set_error('merid', t('The @field you have entered is not valid.',array('@field' => t('Partner ID'))));
	}
	if(preg_match('@^[0-9a-z]{32}$@', $form_state['values']['security_key']) !== 1) {
		form_set_error('security_key', t('The @field you have entered is not valid.',array('@field' => t('Security Key'))));
	}
}

function alipay_admin_form_submit($form, $form_state) {
	$settings=array(
		'security_key', 'merid'
	);
	foreach($settings as $s) {
		variable_set('alipay_'.$s,trim($form_state['values'][$s]));
	}
}

function alipay_paymentgatewayinfo() {
	$merid=variable_get('alipay_merid');
	$key=variable_get('alipay_security_key');
	if(empty($merid) || empty($key)) return;
	else
	return array(
		'alipay' => array(
			'name' => t('AliPay'),
			'url' => 'http://www.alipay.com',
			'front'  => drupal_get_path('module', 'alipay').'/images/alipay.png',
			'payment' => drupal_get_path('module', 'alipay').'/images/alipay.png',
		),
	);
}

function alipay_access() {
	if($_SERVER['REQUEST_METHOD']!=='POST') {
		return false;
	}
	return true;
}

function alipay_submit_form($form, $form_state) {
	return;
}

function alipay_submit_form_submit($form, $form_state) {
	include_once(DRUPAL_ROOT . '/' . drupal_get_path('module', 'alipay') . '/alipay.config.php');
	include_once(DRUPAL_ROOT . '/' . drupal_get_path('module', 'alipay') . '/lib/alipay_submit.class.php');
	$alipay_config['partner'] = variable_get('alipay_merid','');
	$alipay_config['key'] = variable_get('alipay_security_key','');
	$alipaySubmit = new AlipaySubmit($alipay_config);

	$parameter = array(
		"service" => "create_direct_pay_by_user",
		"partner" => variable_get('alipay_merid', $alipay_config['partner']),
		"payment_type"	=> '1',
		"notify_url"	=> $GLOBALS['base_url'].'/charge/alipay/response_back',
		"return_url"	=> $GLOBALS['base_url'].'/charge/alipay/response',
		"seller_id"	=> variable_get('alipay_merid', $alipay_config['partner']),
		"out_trade_no"	=> $form_state['values']['orderno'],
		"subject"	=> $form_state['values']['ordertitle'],
		"total_fee"	=> $form_state['values']['amount'],
		"anti_phishing_key"	=> $alipaySubmit->query_timestamp(),
		"exter_invoke_ip"	=> $_SERVER['REMOTE_ADDR'],
		"it_b_pay" => '2h',
		"_input_charset"	=> trim(strtolower($alipay_config['input_charset']))
	);

	//建立请求
	$html_text = $alipaySubmit->buildRequestForm($parameter,'post');
	return '<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"></head><body>'.$html_text.'</body></html>';
}

function alipay_response_access(){
	include_once(DRUPAL_ROOT . '/' . drupal_get_path('module', 'alipay') . '/alipay.config.php');
	include_once(DRUPAL_ROOT . '/' . drupal_get_path('module', 'alipay') . '/lib/alipay_notify.class.php');
	$alipay_config['partner'] = variable_get('alipay_merid','');
	$alipay_config['key'] = variable_get('alipay_security_key','');
	if(arg(2)=='response') { // If it is front return_url
		if(count($_GET)<=1) return FALSE;
		if(empty($_GET['trade_status'])) return FALSE;
		$alipayNotify = new AlipayNotify($alipay_config);
		return $alipayNotify->verifyReturn();
	} else { // If it is backend notify_url
		if(count($_POST)==0) return FALSE;
		if(empty($_POST['trade_status'])) return FALSE;
		$alipayNotify = new AlipayNotify($alipay_config);
		return $alipayNotify->verifyNotify();
	}
}

function alipay_response() {
	if(arg(2)=='response') { // If it is front return_url
		$orderno=$_GET['out_trade_no'];
		$transno=$_GET['trade_no'];
		$totalfee=$_GET['total_fee'];
		$trade_status=$_GET['trade_status'];
	} else { // If it is backend notify_url
		$orderno=$_POST['out_trade_no'];
		$transno=$_POST['trade_no'];
		$totalfee=$_POST['total_fee'];
		$trade_status=$_POST['trade_status'];
	}

	switch($trade_status) {
		case 'TRADE_FINISHED':
		case 'TRADE_SUCCESS':
			$settledate=date('md');
			module_invoke_all('gatewayreponse',array(
				'alipay' => array(
					'orderno' => $orderno,
					'transactionno' => $transno,
					'amount' => $totalfee,
					'settledate' => $settledate,
					'is_backend' => arg(2)=='response_back',
					'echostr' => 'success',
				),
			));
			break;
		case 'TRADE_CLOSED':
			module_invoke_all('gatewayorderclose', array(
				'alipay' => array(
					'orderno' => $orderno,
					'is_backend' => arg(2)=='response_back',
					'echostr' => 'success',
				),
			));
			break;
	}
}

function alipay_charge_dispatch_form($form, $form_state) {
	$form['massivefile']=array(
		'#type' => 'managed_file',
		'#title' => t('Data file'),
		'#required' => TRUE,
		'#description' => t('Please upload .csv file generated by Alipay.'),
		'#upload_validators' => array('file_validate_extensions' => array('csv')),
		'#upload_location' => 'private://',
	);
	$form['save']=array(
		'#type' => 'submit',
		'#value' => t('Begin Proceed'),
	);
	return $form;
}

function alipay_charge_dispatch_form_submit($form, $form_state) {
	$file=file_load($form_state['values']['massivefile']);
	$handle=fopen($file->uri, 'r');
	if(!$handle) return;
	while($text=fgets($handle)) {
		if(substr($text,0,1)=='#') continue;
		$detail=explode(',',$text);
		$order=order_load($detail[4]);
		if(!$order) continue;
		if($order->status==100) continue;
		db_update('orders')->condition('orderno',$detail[4])->fields(array('status'=>10))->execute();
		$r=module_invoke_all('gatewayreponse',array(
			'alipay' => array(
				'orderno' => $detail[4],
				'transactionno' => $detail[3],
				'amount' => $detail[6],
				'settledate' => date('md'),
				'is_backend' => TRUE,
				'is_processing' => TRUE,
			),
		));
		if($r[0]==1)
			drupal_set_message(t('Order No.!orderno paid successful with !amount via !method.', array(
				'!orderno'=>$detail[4],
				'!amount'=>$detail[6],
				'!method'=>t('Alipay')
			)));
	}
	fclose($handle);
}

?>
